[project]
authors = [
  {name = "Lightning AI", email = "contact@lightning.ai"},
]
description = "Hackable implementation of state-of-the-art open-source LLMs"
license = {file = "LICENSE"}
name = "litgpt"
readme = "README.md"
version = "0.3.0.dev0"

dependencies = [
  "torch>=2.2.0",
  "lightning==2.3.0.dev20240328",
  "jsonargparse[signatures]>=4.27.6",
]

[project.urls]
documentation = "https://github.com/lightning-AI/litgpt/tutorials"
homepage = "https://github.com/lightning-AI/litgpt"

[project.scripts]
litgpt = "litgpt.__main__:main"

[project.optional-dependencies]
all = [
  "bitsandbytes==0.42.0", # quantization
  "boto3>=1.34.0",
  "botocore>=1.34.0",
  "sentencepiece", # llama-based models
  "tokenizers", # pythia, falcon, redpajama
  "requests", # litgpt.data
  "litdata", # litgpt.data
  "zstandard", # litgpt.data.prepare_slimpajama.py
  "pandas", # litgpt.data.prepare_starcoder.py
  "pyarrow", # litgpt.data.prepare_starcoder.py
  "tensorboard", # litgpt.pretrain
  "torchmetrics", # litgpt.pretrain
  "datasets", # litgpt.evaluate
  "transformers>=4.38.0", # litgpt.evaluate
  "lm-eval>=0.4.2", # litgpt.evaluate
  "safetensors", # download
  "huggingface_hub[hf_transfer]>=0.21.0", # download
]
test = [
  "pytest",
  "pytest-rerunfailures",
  "pytest-timeout",
  "transformers>=4.38.0", # numerical comparisons
  "einops",
  "protobuf",
  "lightning-thunder==0.2.0.dev20240404; python_version >= '3.10'",
]

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
  "wheel",
]

[tool.setuptools.packages.find]
exclude = []
include = [
  "litgpt",
  "litgpt.*",
]

[tool.setuptools.package-data]
litgpt = [
  "LICENSE",
  "README.md",
]
